@model mvc.ViewModels.SpotifyInput
@using mvc.ViewModels
@using SpotifyAPI.Web.Models
@{
    ViewData["Title"] = "Spotify";
}

<h1>Spotify</h1>
<partial name="PartAds" />
<hr />

<form asp-route="Spotify" method="post">
    <div class="form-group">
        @if (ViewData["SongsLiked"] != null)
        {
            <h4>Les sons que nos utilisateurs ont aimé.</h4>
            @foreach (Music item in ViewData["SongsLiked"] as List<Music>)
            {
                <p> Musique : @item.MusicName</p>
                <p> Artiste : @item.ArtistName</p>
                <form asp-route="Spotify" method="post">
                    <input type="hidden" name="songname" value="@item.MusicName-@item.ArtistName" />
                    <button type="submit" asp-action="SaveSong">J'aime cette musique</button>
                </form>
                <hr />
            }

            <label asp-for="@Model.searchSong">Entrez le titre de votre musique préférée</label>
            <input type="text" asp-for="@Model.searchSong" />

            <button type="submit" asp-action="SearchSong">Chercher des musiques</button>
        }
    </div>
</form>

@if (ViewData["tracks"] != null)
{
    <form asp-route="Spotify" method="post">
        <div class="form-group">
            <label>Votre choix</label>
            <select name="songname">
                @foreach (FullTrack track in ViewData["tracks"] as List<FullTrack>)
                {
                    string value = track.Name + "-" + track.Artists.FirstOrDefault().Name;
                    <option value="@value"> @track.Name - @track.Artists.FirstOrDefault().Name</option>
                    
                }
            </select>
                <button type="submit" asp-action="SaveSong">Choisir ma musique préférée</button>
            </div>
    </form>
}